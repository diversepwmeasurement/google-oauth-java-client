jobs:
  approve:
    if: contains(github.head_ref, 'release-please')
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/github-script@v6
      with:
        debug: true
        github-token: ${{secrets.YOSHI_APPROVER_TOKEN}}
        script: "// only approve PRs from release-please[bot]\nif (context.payload.pull_request.user.login\
          \ !== \"release-please[bot]\") {\n  return;\n}\n\n// only approve PRs like\
          \ \"chore(main): release <release version>\"\nif (  !context.payload.pull_request.title.startsWith(\"\
          chore(main): release\") ) {\n  return;\n}\n\n// only approve PRs with pom.xml\
          \ and versions.txt changes\nconst filesPromise = github.rest.pulls.listFiles.endpoint({\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  pull_number:\
          \ context.payload.pull_request.number,\n});\nconst changed_files = await\
          \ github.paginate(filesPromise)\n\nif ( changed_files.length < 1 ) {\n \
          \ console.log( \"Not proceeding since PR is empty!\" )\n  return;\n}\n\n\
          if ( !changed_files.some(v => v.filename.includes(\"pom\")) || !changed_files.some(v\
          \ => v.filename.includes(\"versions.txt\")) ) {\n  console.log( \"PR file\
          \ changes do not have pom.xml or versions.txt -- something is wrong. PTAL!\"\
          \ )\n  return;\n}\n\n// trigger auto-release when\n// 1) it is a SNAPSHOT\
          \ release (auto-generated post regular release)\n// 2) there are dependency\
          \ updates only\n// 3) there are no open dependency update PRs in this repo\
          \ (to avoid multiple releases)\nif (\n  context.payload.pull_request.body.includes(\"\
          Fix\") ||\n  context.payload.pull_request.body.includes(\"Build\") ||\n\
          \  context.payload.pull_request.body.includes(\"Documentation\") ||\n  context.payload.pull_request.body.includes(\"\
          BREAKING CHANGES\") ||\n  context.payload.pull_request.body.includes(\"\
          Features\")\n) {\n  console.log( \"Not auto-releasing since it is not a\
          \ dependency-update-only release.\" );\n  return;\n}\n\nconst promise =\
          \ github.rest.pulls.list.endpoint({\n  owner: context.repo.owner,\n  repo:\
          \ context.repo.repo,\n  state: 'open'\n});\nconst open_pulls = await github.paginate(promise)\n\
          \nif ( open_pulls.length > 1 && !context.payload.pull_request.title.includes(\"\
          SNAPSHOT\") ) {\n  for ( const pull of open_pulls ) {\n    if ( pull.title.startsWith(\"\
          deps: update dependency\") ) {\n      console.log( \"Not auto-releasing\
          \ yet since there are dependency update PRs open in this repo.\" );\n  \
          \    return;\n    }\n  }\n}\n\n// approve release PR\nawait github.rest.pulls.createReview({\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: 'Rubber\
          \ stamped release!',\n  pull_number: context.payload.pull_request.number,\n\
          \  event: 'APPROVE'\n});\n\n// attach kokoro:force-run and automerge labels\n\
          await github.rest.issues.addLabels({\n  owner: context.repo.owner,\n  repo:\
          \ context.repo.repo,\n  issue_number: context.payload.pull_request.number,\n\
          \  labels: ['kokoro:force-run', 'automerge']\n});\n"
name: auto-release
on:
  repository_dispatch:
    types: trigger-ga___auto-release.yaml
